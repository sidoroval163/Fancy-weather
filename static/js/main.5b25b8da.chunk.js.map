{"version":3,"sources":["images/refresh_icon.svg","images/best_loader.gif","components/WeatherToday/components/Location/Location.jsx","components/WeatherToday/components/TemperatureToday/TemperatureToday.jsx","components/WeatherToday/WeatherToday.jsx","components/ThreeDayWthr/ThreeDayWthr.jsx","components/Geolocation/components/Longitude/Longitude.jsx","components/Geolocation/components/Attitude/Attitude.jsx","components/Geolocation/Geolocation.jsx","index.js"],"names":["module","exports","Location","props","className","city","getNameOfIcon","description","name","hotOrCold","temperature","TemperatureToday","language","lang","weatherNow","Math","round","tempNow","main","temp","feelsLike","feels_like","icon","weather","color","size","animate","toUpperCase","console","log","textFeel","textWet","humidity","textWind","wind","speed","WeatherToday","state","time","Date","toLocaleString","this","intervalID","setInterval","tick","clearInterval","setState","temper","React","Component","ThreeDayWthr","weatherNow1","threeDayWeather","list","weatherNow2","weatherNow3","daymaker","here","getDay","dt_txt","Longitude","attitud","lat","Attitude","lng","Geolocation","results","geometry","defaultState","center","zoom","App","switchBackgroundHandler","languageSelectorHandler","e","target","value","getRequest","cityName","farenheitButtonHandler","forecast","unitsType","translateTemperature","celsiumButtonHandler","searhBtnHandler","handleOnchange","myPosition","picture","loading","temperatureNow","temperatureFeelsLike","farenheitToC","CTofarenheit","bgColor","spinnerColor","textColor","logoSrc","best","text","id","onClick","src","Myimage","onChange","disabled","type","placeholder","newState","launchRequest","typeOfRequest","coord","link","getLink","fetch","request","json","parsedRequest","latitude","longitude","window","navigator","geolocation","getCurrentPosition","coords","then","result","components","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b25b8da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/refresh_icon.4ed12d61.svg\";","module.exports = __webpack_public_path__ + \"static/media/best_loader.2c9b45c9.gif\";","import React from 'react';\r\nimport \"./Location.css\";\r\nexport const Location = (props) => {\r\n    return (\r\n        <div className=\"location\">\r\n            <h1 >{props.city}</h1>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport \"./TemperatureToday.css\";\r\nimport ReactAnimatedWeather from 'react-animated-weather';\r\n\r\nconst getNameOfIcon = (description) => {\r\n    let name;\r\n    switch (description) {\r\n        case 'Clouds':\r\n            name = 'CLOUDY'\r\n            break;\r\n        case 'Rain':\r\n            name = 'RAIN'\r\n            break;\r\n\r\n\r\n        default:\r\n            name = 'CLEAR_DAY'\r\n            break;\r\n    }\r\n    return name;\r\n}\r\n\r\nconst hotOrCold = (temperature) => {\r\n    if (temperature > 0) { return '+' + temperature; }\r\n    else if (temperature < 0) { return '-' + temperature; }\r\n    else { return temperature }\r\n};\r\nconst textFeel = (props) => {\r\n    console.log(props);\r\n    if (props === \"ru\") { return \"Ощущается как:\" }\r\n    else if (props === \"en\") { return \"Feeling like:\" }\r\n}\r\nconst textWet = (props) => {\r\n    if (props === \"ru\") { return \"Влажность:\" }\r\n    else if (props === \"en\") { return \"Humidity:\" }\r\n}\r\nconst textWind = (props) => {\r\n    if (props === \"ru\") { return \"Скорость ветра:\" }\r\n    else if (props === \"en\") { return \"Wind speed:\" }\r\n}\r\n\r\n\r\nexport const TemperatureToday = (props) => {\r\n    const language = props.lang;\r\n\r\n    const weatherNow = Math.round(props.tempNow.main.temp);\r\n    const feelsLike = Math.round(props.tempNow.main.feels_like);\r\n\r\n    return (\r\n\r\n\r\n        < div className=\"todayTemp\" >\r\n            <div className=\"Temp\">{hotOrCold(weatherNow)}°</div>\r\n            <div className=\"WeatherImage\"><ReactAnimatedWeather icon={getNameOfIcon(props.tempNow.weather[0].main)}\r\n                color={'LemonChiffon'}\r\n                size={94}\r\n                animate={true} /></div>\r\n            <div className=\"WeatherProps\">\r\n                <h3>{(props.tempNow.weather[0].description).toUpperCase()}</h3>\r\n                <h3>{textFeel(language)} {hotOrCold(feelsLike)}°</h3>\r\n                <h3>{textWet(language)} {props.tempNow.main.humidity}% </h3>\r\n                <h3>{textWind(language)} {Math.round(props.tempNow.wind.speed)} М/С</h3>\r\n\r\n            </div>\r\n        </ div>\r\n\r\n    );\r\n\r\n};\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Location } from './components/Location/Location';\r\n\r\nimport { TemperatureToday } from './components/TemperatureToday/TemperatureToday';\r\n\r\n\r\nimport \"./WeatherToday.css\";\r\n\r\n\r\n\r\n\r\nexport class WeatherToday extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            time: new Date().toLocaleString()\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.intervalID = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        );\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalID);\r\n    }\r\n\r\n\r\n    tick() {\r\n        this.setState({\r\n            time: new Date().toLocaleString(),\r\n        });\r\n    }\r\n    render() {\r\n\r\n        return <div className=\"weather_today_block\">\r\n            <Location city={this.props.temper.name} />\r\n            <div className=\"datetime\"> {this.state.time}</div>\r\n            <TemperatureToday tempNow={this.props.temper} lang={this.props.lang} />\r\n\r\n\r\n        </div>;\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\nimport ReactAnimatedWeather from 'react-animated-weather';\r\n\r\nimport \"./ThreeDayWthr.css\";\r\nconst getNameOfIcon = (description) => {\r\n    let name;\r\n    switch (description) {\r\n        case 'Clouds':\r\n            name = 'CLOUDY'\r\n            break;\r\n        case 'Rain':\r\n            name = 'RAIN'\r\n            break;\r\n\r\n\r\n        default:\r\n            name = 'CLEAR_DAY'\r\n            break;\r\n    }\r\n    return name;\r\n}\r\nconst hotOrCold = (temperature) => {\r\n    if (temperature > 0) { return '+' + temperature; }\r\n    else if (temperature < 0) { return '-' + temperature; }\r\n    else { return temperature }\r\n};\r\n\r\nexport class ThreeDayWthr extends React.Component {\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const weatherNow1 = Math.round(this.props.threeDayWeather.list[8].main.temp);\r\n        const weatherNow2 = Math.round(this.props.threeDayWeather.list[16].main.temp);\r\n        const weatherNow3 = Math.round(this.props.threeDayWeather.list[24].main.temp);\r\n        const daymaker = (here, props) => {\r\n            if (props === \"ru\") {\r\n                let days = ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'];\r\n\r\n                let number = new Date(here).getDay();\r\n                return days[number]\r\n            }\r\n            else if (props === \"en\") {\r\n                let days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n\r\n                let number = new Date(here).getDay();\r\n                return days[number]\r\n            }\r\n        }\r\n\r\n\r\n        return <div className=\"weather_days_block\">\r\n            <div className=\"day_block\">\r\n                <div className=\"weekdayText\">{daymaker(this.props.threeDayWeather.list[8].dt_txt, this.props.lang)}</div>\r\n                <div className=\"weekdayTemp\">{hotOrCold(weatherNow1)}°</div>\r\n                <div className=\"weatherPic\"><ReactAnimatedWeather icon={getNameOfIcon(this.props.threeDayWeather.list[8].weather[0].main)}\r\n                    color={'LemonChiffon'}\r\n                    size={60}\r\n                    animate={true} /></div>\r\n\r\n            </div>\r\n            <div className=\"day_block\">\r\n                <div className=\"weekdayText\">{daymaker(this.props.threeDayWeather.list[16].dt_txt, this.props.lang)}</div>\r\n                <div className=\"weekdayTemp\">{hotOrCold(weatherNow2)}°</div>\r\n                <div className=\"weatherPic\"><ReactAnimatedWeather icon={getNameOfIcon(this.props.threeDayWeather.list[16].weather[0].main)}\r\n                    color={'LemonChiffon'}\r\n                    size={60}\r\n                    animate={true} /></div>\r\n\r\n            </div>\r\n            <div className=\"day_block\">\r\n                <div className=\"weekdayText\">{daymaker(this.props.threeDayWeather.list[24].dt_txt, this.props.lang)}</div>\r\n                <div className=\"weekdayTemp\">{hotOrCold(weatherNow3)}°</div>\r\n                <div className=\"weatherPic\"><ReactAnimatedWeather icon={getNameOfIcon(this.props.threeDayWeather.list[24].weather[0].main)}\r\n                    color={'LemonChiffon'}\r\n                    size={60}\r\n                    animate={true} /></div>\r\n            </div>\r\n\r\n\r\n        </div >\r\n\r\n    };\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport \"./Longitude.css\";\r\nexport const Longitude = (props) => {\r\n    const attitud = (props) => {\r\n        if (props === \"ru\") {\r\n\r\n            return 'Долгота:'\r\n        }\r\n        else if (props === \"en\") {\r\n\r\n\r\n\r\n            return \"Longitude:\"\r\n        }\r\n    }\r\n    return (\r\n\r\n        <div className=\"longitude_info\">\r\n            {attitud(props.lang)} {props.lat}\r\n        </div>\r\n\r\n    );\r\n};","import React from 'react';\r\nimport \"./Attitude.css\";\r\nexport const Attitude = (props) => {\r\n    const attitud = (props) => {\r\n        if (props === \"ru\") {\r\n\r\n            return 'Широта:'\r\n        }\r\n        else if (props === \"en\") {\r\n\r\n\r\n\r\n            return \"Attitude:\"\r\n        }\r\n    }\r\n    return (\r\n\r\n        <div className=\"attitude_info\">\r\n            {attitud(props.lang)} {props.lng}\r\n        </div>\r\n\r\n    );\r\n};","import React from 'react';\r\n\r\nimport { Longitude } from './components/Longitude/Longitude';\r\nimport { Attitude } from './components/Attitude/Attitude';\r\nimport { YMaps, Map } from 'react-yandex-maps';\r\nimport \"./Geolocation.css\";\r\n\r\n\r\n\r\n\r\nexport class Geolocation extends React.Component {\r\n\r\n\r\n    render() {\r\n\r\n        console.log(this.props.city.results[0].geometry.lat);\r\n        console.log(this.props.city.results[0].geometry.lng);\r\n        return <div className=\"geolocation\">\r\n            <YMaps>\r\n                <div className=\"map\" >\r\n                    <Map defaultState={{ center: [this.props.city.results[0].geometry.lat, this.props.city.results[0].geometry.lng], zoom: 8 }}\r\n                        state={{ center: [this.props.city.results[0].geometry.lat, this.props.city.results[0].geometry.lng], zoom: 8 }} className=\"mapMini\" />\r\n                </div>\r\n            </YMaps>\r\n            <Longitude lat={this.props.city.results[0].geometry.lat} lang={this.props.lang} />\r\n            <Attitude lng={this.props.city.results[0].geometry.lng} lang={this.props.lang} />\r\n\r\n        </div >;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport LoadingScreen from 'react-loading-screen'\nimport \"./Wrapper.css\";\nimport { WeatherToday } from './components/WeatherToday/WeatherToday';\nimport { ThreeDayWthr } from './components/ThreeDayWthr/ThreeDayWthr';\nimport { Geolocation } from './components/Geolocation/Geolocation';\nimport Myimage from './images/refresh_icon.svg'\nimport best from './images/best_loader.gif'\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      weather: null,\n      forecast: null,\n      myPosition: null,\n      city: null,\n      lang: \"en\",\n      unitsType: \"metric\",\n      picture: null,\n      cityName: null,\n      loading: true,\n    };\n  };\n\n  switchBackgroundHandler = () => {\n\n\n    // this.launchRequest(\"picture\").then((result) => this.setState({ picture: result }, () => {\n    //   const background = document.getElementById(\"wrapper\");\n    //   background.style.cssText = `background-image: url(${this.state.picture.urls.regular});`;\n    // }));\n\n\n  }\n\n  languageSelectorHandler = (e) => {\n\n    console.log(e.target.value)\n\n\n    this.setState({ lang: e.target.value }, () => this.getRequest(this.state.cityName));\n\n  }\n\n\n  farenheitToC(temp) {\n    return (temp - 32) * (5 / 9);\n  }\n  CTofarenheit(temp) {\n    return (temp) * (9 / 5) + 32;\n  }\n\n  translateTemperature(unitsType) {\n\n\n\n    const forecast = this.state.forecast;\n    const weather = this.state.weather;\n    console.log(forecast);\n    let temperatureNow = weather.main.temp;\n    let temperatureFeelsLike = weather.main.feels_like;\n    if (unitsType === \"metric\") {\n      weather.main.temp = this.farenheitToC(temperatureNow);\n      weather.main.feels_like = this.farenheitToC(temperatureFeelsLike);\n      forecast.list[8].main.temp = this.farenheitToC(forecast.list[8].main.temp);\n      forecast.list[16].main.temp = this.farenheitToC(forecast.list[16].main.temp);\n      forecast.list[24].main.temp = this.farenheitToC(forecast.list[24].main.temp);\n    } else {\n      weather.main.temp = this.CTofarenheit(temperatureNow);\n      weather.main.feels_like = this.CTofarenheit(temperatureFeelsLike);\n      forecast.list[8].main.temp = this.CTofarenheit(forecast.list[8].main.temp);\n      forecast.list[16].main.temp = this.CTofarenheit(forecast.list[16].main.temp);\n      forecast.list[24].main.temp = this.CTofarenheit(forecast.list[24].main.temp);\n    }\n\n    this.setState({ weather });\n    this.setState({ forecast });\n  }\n\n\n  farenheitButtonHandler = () => {\n\n    if (this.state.weather && this.state.forecast) {\n      this.setState({ unitsType: \"imperial\" }, () => this.translateTemperature('imperial'))\n    }\n\n\n\n  }\n\n  celsiumButtonHandler = () => {\n    if (this.state.weather && this.state.forecast) {\n      this.setState({ unitsType: \"metric\" }, () => this.translateTemperature('metric'))\n    }\n\n  }\n\n  searhBtnHandler = (city) => {\n\n    this.getRequest(city)\n  }\n  handleOnchange = (e) => {\n    this.setState({ cityName: e.target.value })\n\n  }\n\n\n  render() {\n    console.log(this.state)\n    return (\n\n      <LoadingScreen\n        loading={this.state.loading}\n        bgColor='#f1f1f1'\n        spinnerColor='#9ee5f8'\n        textColor='#676767'\n        logoSrc={best}\n        text='Пожалуйста подождите человечек старается'\n      >\n\n\n\n\n        <div className=\"wrapper\" id=\"wrapper\"  >\n\n          <div className=\"controlBlock\">\n            <div className=\"wrapperButtons\">\n              <div className=\"switchBackgroundButton\" id=\"refresh\" onClick={() => this.switchBackgroundHandler()}>\n                <img className=\"refresh\" id=\"refresher\" src={Myimage} /></div>\n              <div className=\"dropdown\">\n                <select className=\"droplist_base\" id=\"languageSelector\" onChange={this.languageSelectorHandler} >\n                  <option value=\"en\">En</option>\n                  <option value=\"ru\">Ru</option>\n\n                </select>\n              </div>\n              <div className=\"wrapper-radio_btns\">\n                <button disabled={this.state.unitsType === \"imperial\"} className={`button_farenheit ${this.state.unitsType === \"imperial\" ? 'focused_temp' : \"\"}`} id=\"farenheitButton\"\n                  onClick={() => this.farenheitButtonHandler()}></button>\n                <button disabled={this.state.unitsType === \"metric\"} className={`button_celsium ${this.state.unitsType === \"metric\" ? 'focused_temp' : \"\"}`} id=\"celsiumButton\" onClick={() => this.celsiumButtonHandler()}></button>\n              </div>\n            </div>\n            <div className=\"wrapper_search\">\n              <input className=\"input_base\" id=\"searchCity\" type=\"search\" placeholder=\"Search city\" onChange={this.handleOnchange}></input>\n              {/* <div className=\"btn_voice\" > <img className=\"voice_icon\" src=\"/source/components/Images/voice_icon.svg\" alt=\"voice\"></img></div> */}\n              <div className=\"btn-search\" id=\"searchBtn\" onClick={() => this.searhBtnHandler(this.state.cityName)} > SEARCH </div>\n\n            </div >\n          </div>\n          <div className=\"weatherWrapper\">\n            {this.state.weather && <WeatherToday temper={this.state.weather} lang={this.state.lang} />}\n            {this.state.forecast && <ThreeDayWthr threeDayWeather={this.state.forecast} lang={this.state.lang} />}\n\n          </div>\n\n          {this.state.city && <Geolocation city={this.state.city} lang={this.state.lang} />}\n\n\n\n\n        </div >\n      </LoadingScreen>\n    )\n  }\n\n  async getRequest(city) {\n\n    const newState = {};\n    newState.weather = await this.launchRequest(\"weather\", city, null);\n    newState.forecast = await this.launchRequest(\"forecast\", city, null);\n    newState.city = await this.launchRequest(\"coord\", city, null);\n    newState.cityName = city;\n    // newState.picture = await this.launchRequest(\"picture\", city, null);\n    newState.loading = false;\n    this.setState(newState);\n\n\n  }\n\n  async launchRequest(typeOfRequest, city, coord) {\n    const link = this.getLink(typeOfRequest, city, coord);\n    const request = await fetch(link);\n    const parsedRequest = await request.json();\n    return parsedRequest;\n  }\n\n\n  getLink(typeOfRequest, city, coord) {\n    let link;\n    switch (typeOfRequest) {\n      case \"weather\":\n        link = `https://api.openweathermap.org/data/2.5/weather?q=${city}&lang=${this.state.lang}&units=${this.state.unitsType}&appid=28c72f6418a6f4fdf083d18908206742`;\n        break;\n      case \"forecast\":\n        link = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&lang=${this.state.lang}&units=${this.state.unitsType}&APPID=28c72f6418a6f4fdf083d18908206742`;\n        break;\n      case \"coord\":\n        link = `https://api.opencagedata.com/geocode/v1/json?q=${city}&key=6eefb8f093e64e4b865c3281df69b384`;\n        break;\n      case \"city\":\n        link = `https://api.opencagedata.com/geocode/v1/json?q=${coord.latitude}+${coord.longitude}&key=6eefb8f093e64e4b865c3281df69b384`;\n        break;\n      case \"picture\":\n        link = `https://api.unsplash.com/photos/random?orientation=landscape&per_page=1&query=nature&client_id=175FYCnNB3FK0X4DTIHQ3Yf05v5ewj0pg_I5UKSm5x4`;\n        break;\n      default:\n        break;\n    }\n    return link;\n  }\n  componentDidMount() {\n    // this.launchRequest(\"picture\").then((result) => this.setState({ picture: result }, () => {\n    //   const background = document.getElementById(\"wrapper\");\n    //   background.style.cssText = `background-image: url(${this.state.picture.urls.regular});`;\n    // }));\n\n\n  }\n\n  componentWillMount() {\n\n    window.navigator.geolocation.getCurrentPosition((myPosition) => {\n      console.log(myPosition.coords.latitude, myPosition.coords.longitude);\n      this.launchRequest(\"city\", null, myPosition.coords).then((result) =>\n        this.getRequest(result.results[0].components.city).then(() => this.setState));\n\n      console.log(this.state, \"state willmount\")\n    }, () => this.setState({ loading: false }))\n\n  }\n}\n\nReactDOM.render(< App />, document.getElementById(\"root\"));\n\n\n\n\n\n"],"sourceRoot":""}