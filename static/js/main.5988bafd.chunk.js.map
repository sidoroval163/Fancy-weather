{"version":3,"sources":["images/refresh_icon.svg","images/best_loader.gif","components/WeatherToday/components/Location/Location.jsx","components/WeatherToday/components/TemperatureToday/TemperatureToday.jsx","components/WeatherToday/WeatherToday.jsx","components/ThreeDayWthr/ThreeDayWthr.jsx","components/Geolocation/components/Longitude/Longitude.jsx","components/Geolocation/components/Attitude/Attitude.jsx","components/Geolocation/Geolocation.jsx","index.js"],"names":["module","exports","Location","props","className","city","getNameOfIcon","description","name","hotOrCold","temperature","TemperatureToday","language","lang","weatherNow","Math","round","tempNow","main","temp","feelsLike","feels_like","icon","weather","color","size","animate","toUpperCase","textFeel","textWet","humidity","textWind","wind","speed","WeatherToday","state","time","Date","toLocaleString","this","intervalID","setInterval","tick","clearInterval","setState","temper","React","Component","ThreeDayWthr","weatherNow1","threeDayWeather","list","weatherNow2","weatherNow3","daymaker","here","getDay","dt_txt","Longitude","attitud","lat","Attitude","lng","Geolocation","defaultState","center","results","geometry","zoom","App","switchBackgroundHandler","launchRequest","then","result","picture","document","getElementById","style","cssText","urls","regular","languageSelectorHandler","e","target","value","getRequest","cityName","farenheitButtonHandler","forecast","unitsType","translateTemperature","celsiumButtonHandler","searhBtnHandler","handleOnchange","handleChange","key","myPosition","loading","temperatureNow","temperatureFeelsLike","farenheitToC","CTofarenheit","bgColor","spinnerColor","textColor","logoSrc","best","text","id","onClick","src","Myimage","onChange","disabled","type","placeholder","onKeyPress","newState","typeOfRequest","coord","link","getLink","fetch","request","status","json","parsedRequest","message","total_results","alert","latitude","longitude","background","window","navigator","geolocation","getCurrentPosition","coords","components","ReactDOM","render"],"mappings":"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","file":"static/js/main.5988bafd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/refresh_icon.4ed12d61.svg\";","module.exports = __webpack_public_path__ + \"static/media/best_loader.2c9b45c9.gif\";","import React from 'react';\r\nimport \"./Location.css\";\r\nexport const Location = (props) => {\r\n    return (\r\n        <div className=\"location\">\r\n            <h1 >{props.city}</h1>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport \"./TemperatureToday.css\";\r\nimport ReactAnimatedWeather from 'react-animated-weather';\r\n\r\nconst getNameOfIcon = (description) => {\r\n    let name;\r\n    switch (description) {\r\n        case 'Clouds':\r\n            name = 'CLOUDY'\r\n            break;\r\n        case 'Rain':\r\n            name = 'RAIN'\r\n            break;\r\n\r\n\r\n        default:\r\n            name = 'CLEAR_DAY'\r\n            break;\r\n    }\r\n    return name;\r\n}\r\n\r\nconst hotOrCold = (temperature) => {\r\n    if (temperature > 0) { return '+' + temperature; }\r\n    else if (temperature < 0) { return '-' + temperature; }\r\n    else { return temperature }\r\n};\r\nconst textFeel = (props) => {\r\n\r\n    if (props === \"ru\") { return \"Ощущается как:\" }\r\n    else if (props === \"en\") { return \"Feeling like:\" }\r\n}\r\nconst textWet = (props) => {\r\n    if (props === \"ru\") { return \"Влажность:\" }\r\n    else if (props === \"en\") { return \"Humidity:\" }\r\n}\r\nconst textWind = (props) => {\r\n    if (props === \"ru\") { return \"Скорость ветра:\" }\r\n    else if (props === \"en\") { return \"Wind speed:\" }\r\n}\r\n\r\n\r\nexport const TemperatureToday = (props) => {\r\n    const language = props.lang;\r\n\r\n    const weatherNow = Math.round(props.tempNow.main.temp);\r\n    const feelsLike = Math.round(props.tempNow.main.feels_like);\r\n\r\n    return (\r\n\r\n\r\n        < div className=\"todayTemp\" >\r\n            <div className=\"Temp\">{hotOrCold(weatherNow)}°</div>\r\n            <div className=\"WeatherImage\"><ReactAnimatedWeather icon={getNameOfIcon(props.tempNow.weather[0].main)}\r\n                color={'LemonChiffon'}\r\n                size={94}\r\n                animate={true} /></div>\r\n            <div className=\"WeatherProps\">\r\n                <h3>{(props.tempNow.weather[0].description).toUpperCase()}</h3>\r\n                <h3>{textFeel(language)} {hotOrCold(feelsLike)}°</h3>\r\n                <h3>{textWet(language)} {props.tempNow.main.humidity}% </h3>\r\n                <h3>{textWind(language)} {Math.round(props.tempNow.wind.speed)} М/С</h3>\r\n\r\n            </div>\r\n        </ div>\r\n\r\n    );\r\n\r\n};\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Location } from './components/Location/Location';\r\n\r\nimport { TemperatureToday } from './components/TemperatureToday/TemperatureToday';\r\n\r\n\r\nimport \"./WeatherToday.css\";\r\n\r\n\r\n\r\n\r\nexport class WeatherToday extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            time: new Date().toLocaleString()\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.intervalID = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        );\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalID);\r\n    }\r\n\r\n\r\n    tick() {\r\n        this.setState({\r\n            time: new Date().toLocaleString(),\r\n        });\r\n    }\r\n    render() {\r\n\r\n        return <div className=\"weather_today_block\">\r\n            <Location city={this.props.temper.name} />\r\n            <div className=\"datetime\"> {this.state.time}</div>\r\n            <TemperatureToday tempNow={this.props.temper} lang={this.props.lang} />\r\n\r\n\r\n        </div>;\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\nimport ReactAnimatedWeather from 'react-animated-weather';\r\n\r\nimport \"./ThreeDayWthr.css\";\r\nconst getNameOfIcon = (description) => {\r\n    let name;\r\n    switch (description) {\r\n        case 'Clouds':\r\n            name = 'CLOUDY'\r\n            break;\r\n        case 'Rain':\r\n            name = 'RAIN'\r\n            break;\r\n\r\n\r\n        default:\r\n            name = 'CLEAR_DAY'\r\n            break;\r\n    }\r\n    return name;\r\n}\r\nconst hotOrCold = (temperature) => {\r\n    if (temperature > 0) { return '+' + temperature; }\r\n    else if (temperature < 0) { return '-' + temperature; }\r\n    else { return temperature }\r\n};\r\n\r\nexport class ThreeDayWthr extends React.Component {\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const weatherNow1 = Math.round(this.props.threeDayWeather.list[8].main.temp);\r\n        const weatherNow2 = Math.round(this.props.threeDayWeather.list[16].main.temp);\r\n        const weatherNow3 = Math.round(this.props.threeDayWeather.list[24].main.temp);\r\n        const daymaker = (here, props) => {\r\n            if (props === \"ru\") {\r\n                let days = ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'];\r\n\r\n                let number = new Date(here).getDay();\r\n                return days[number]\r\n            }\r\n            else if (props === \"en\") {\r\n                let days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n\r\n                let number = new Date(here).getDay();\r\n                return days[number]\r\n            }\r\n        }\r\n\r\n\r\n        return <div className=\"weather_days_block\">\r\n            <div className=\"day_block\">\r\n                <div className=\"weekdayText\">{daymaker(this.props.threeDayWeather.list[8].dt_txt, this.props.lang)}</div>\r\n                <div className=\"weekdayTemp\">{hotOrCold(weatherNow1)}°</div>\r\n                <div className=\"weatherPic\"><ReactAnimatedWeather icon={getNameOfIcon(this.props.threeDayWeather.list[8].weather[0].main)}\r\n                    color={'LemonChiffon'}\r\n                    size={60}\r\n                    animate={true} /></div>\r\n\r\n            </div>\r\n            <div className=\"day_block\">\r\n                <div className=\"weekdayText\">{daymaker(this.props.threeDayWeather.list[16].dt_txt, this.props.lang)}</div>\r\n                <div className=\"weekdayTemp\">{hotOrCold(weatherNow2)}°</div>\r\n                <div className=\"weatherPic\"><ReactAnimatedWeather icon={getNameOfIcon(this.props.threeDayWeather.list[16].weather[0].main)}\r\n                    color={'LemonChiffon'}\r\n                    size={60}\r\n                    animate={true} /></div>\r\n\r\n            </div>\r\n            <div className=\"day_block\">\r\n                <div className=\"weekdayText\">{daymaker(this.props.threeDayWeather.list[24].dt_txt, this.props.lang)}</div>\r\n                <div className=\"weekdayTemp\">{hotOrCold(weatherNow3)}°</div>\r\n                <div className=\"weatherPic\"><ReactAnimatedWeather icon={getNameOfIcon(this.props.threeDayWeather.list[24].weather[0].main)}\r\n                    color={'LemonChiffon'}\r\n                    size={60}\r\n                    animate={true} /></div>\r\n            </div>\r\n\r\n\r\n        </div >\r\n\r\n    };\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport \"./Longitude.css\";\r\nexport const Longitude = (props) => {\r\n    const attitud = (props) => {\r\n        if (props === \"ru\") {\r\n\r\n            return 'Долгота:'\r\n        }\r\n        else if (props === \"en\") {\r\n\r\n\r\n\r\n            return \"Longitude:\"\r\n        }\r\n    }\r\n    return (\r\n\r\n        <div className=\"longitude_info\">\r\n            {attitud(props.lang)} {props.lat}\r\n        </div>\r\n\r\n    );\r\n};","import React from 'react';\r\nimport \"./Attitude.css\";\r\nexport const Attitude = (props) => {\r\n    const attitud = (props) => {\r\n        if (props === \"ru\") {\r\n\r\n            return 'Широта:'\r\n        }\r\n        else if (props === \"en\") {\r\n\r\n\r\n\r\n            return \"Attitude:\"\r\n        }\r\n    }\r\n    return (\r\n\r\n        <div className=\"attitude_info\">\r\n            {attitud(props.lang)} {props.lng}\r\n        </div>\r\n\r\n    );\r\n};","import React from 'react';\r\n\r\nimport { Longitude } from './components/Longitude/Longitude';\r\nimport { Attitude } from './components/Attitude/Attitude';\r\nimport { YMaps, Map } from 'react-yandex-maps';\r\nimport \"./Geolocation.css\";\r\n\r\n\r\n\r\n\r\nexport class Geolocation extends React.Component {\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return <div className=\"geolocation\">\r\n            <YMaps>\r\n                <div className=\"map\" >\r\n                    <Map defaultState={{ center: [this.props.city.results[0].geometry.lat, this.props.city.results[0].geometry.lng], zoom: 8 }}\r\n                        state={{ center: [this.props.city.results[0].geometry.lat, this.props.city.results[0].geometry.lng], zoom: 8 }} className=\"mapMini\" />\r\n                </div>\r\n            </YMaps>\r\n            <Longitude lat={this.props.city.results[0].geometry.lat} lang={this.props.lang} />\r\n            <Attitude lng={this.props.city.results[0].geometry.lng} lang={this.props.lang} />\r\n\r\n        </div >;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport LoadingScreen from 'react-loading-screen'\nimport \"./Wrapper.css\";\nimport { WeatherToday } from './components/WeatherToday/WeatherToday';\nimport { ThreeDayWthr } from './components/ThreeDayWthr/ThreeDayWthr';\nimport { Geolocation } from './components/Geolocation/Geolocation';\nimport Myimage from './images/refresh_icon.svg'\nimport best from './images/best_loader.gif'\n\nconst DEFAULT_PICTURE_URL = \"https://i.gifer.com/OvZ.gif\";\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      weather: null,\n      forecast: null,\n      myPosition: null,\n      city: null,\n      lang: \"en\",\n      unitsType: \"metric\",\n      picture: null,\n      cityName: null,\n      loading: true,\n    };\n  };\n\n  switchBackgroundHandler = () => {\n\n\n    this.launchRequest(\"picture\").then((result) => this.setState({ picture: result }, () => {\n      const background = document.getElementById(\"wrapper\");\n      background.style.cssText = `background-image: url(${this.state.picture ? this.state.picture.urls.regular : DEFAULT_PICTURE_URL});`;\n    }));\n\n\n  }\n\n  languageSelectorHandler = (e) => {\n\n\n\n    this.setState({ lang: e.target.value }, () => this.getRequest(this.state.cityName));\n\n  }\n\n\n  farenheitToC(temp) {\n    return (temp - 32) * (5 / 9);\n  }\n  CTofarenheit(temp) {\n    return (temp) * (9 / 5) + 32;\n  }\n\n\n  translateTemperature(unitsType) {\n\n\n\n    const forecast = this.state.forecast;\n    const weather = this.state.weather;\n\n    let temperatureNow = weather.main.temp;\n    let temperatureFeelsLike = weather.main.feels_like;\n    if (unitsType === \"metric\") {\n      weather.main.temp = this.farenheitToC(temperatureNow);\n      weather.main.feels_like = this.farenheitToC(temperatureFeelsLike);\n      forecast.list[8].main.temp = this.farenheitToC(forecast.list[8].main.temp);\n      forecast.list[16].main.temp = this.farenheitToC(forecast.list[16].main.temp);\n      forecast.list[24].main.temp = this.farenheitToC(forecast.list[24].main.temp);\n    } else {\n      weather.main.temp = this.CTofarenheit(temperatureNow);\n      weather.main.feels_like = this.CTofarenheit(temperatureFeelsLike);\n      forecast.list[8].main.temp = this.CTofarenheit(forecast.list[8].main.temp);\n      forecast.list[16].main.temp = this.CTofarenheit(forecast.list[16].main.temp);\n      forecast.list[24].main.temp = this.CTofarenheit(forecast.list[24].main.temp);\n    }\n\n    this.setState({ weather });\n    this.setState({ forecast });\n  }\n\n\n  farenheitButtonHandler = () => {\n\n    if (this.state.weather && this.state.forecast) {\n      this.setState({ unitsType: \"imperial\" }, () => this.translateTemperature('imperial'))\n    }\n\n\n\n  }\n\n  celsiumButtonHandler = () => {\n    if (this.state.weather && this.state.forecast) {\n      this.setState({ unitsType: \"metric\" }, () => this.translateTemperature('metric'))\n    }\n\n  }\n\n  searhBtnHandler = (city) => {\n\n    this.getRequest(city)\n  }\n  handleOnchange = (e) => {\n    this.setState({ cityName: e.target.value })\n\n  }\n\n  handleChange = (e) => {\n    if (e.key == 'Enter') {\n      this.searhBtnHandler(this.state.cityName);\n    }\n  }\n\n  render() {\n\n\n    return (\n\n\n      <LoadingScreen\n        loading={this.state.loading}\n        bgColor='#f1f1f1'\n        spinnerColor='#9ee5f8'\n        textColor='#676767'\n        logoSrc={best}\n        text='Пожалуйста подождите'\n      >\n\n\n\n\n        <div className=\"wrapper\" id=\"wrapper\"  >\n\n          <div className=\"controlBlock\">\n            <div className=\"wrapperButtons\">\n              <div className=\"switchBackgroundButton\" id=\"refresh\" onClick={() => this.switchBackgroundHandler()}>\n                <img className=\"refresh\" id=\"refresher\" src={Myimage} /></div>\n              <div className=\"dropdown\">\n                <select className=\"droplist_base\" id=\"languageSelector\" onChange={this.languageSelectorHandler} >\n                  <option value=\"en\">En</option>\n                  <option value=\"ru\">Ru</option>\n\n                </select>\n              </div>\n              <div className=\"wrapper-radio_btns\">\n                <button disabled={this.state.unitsType === \"imperial\"} className={`button_farenheit ${this.state.unitsType === \"imperial\" ? 'focused_temp' : \"\"}`} id=\"farenheitButton\"\n                  onClick={() => this.farenheitButtonHandler()}></button>\n                <button disabled={this.state.unitsType === \"metric\"} className={`button_celsium ${this.state.unitsType === \"metric\" ? 'focused_temp' : \"\"}`} id=\"celsiumButton\" onClick={() => this.celsiumButtonHandler()}></button>\n              </div>\n            </div>\n            <div className=\"wrapper_search\">\n              <input className=\"input_base\" id=\"searchCity\" type=\"search\" placeholder=\"Search city\" onChange={this.handleOnchange} onKeyPress={this.handleChange}></input>\n\n              <div className=\"btn-search\" id=\"searchBtn\" onClick={() => this.searhBtnHandler(this.state.cityName)} > SEARCH </div>\n\n            </div >\n          </div>\n          <div className=\"weatherWrapper\">\n            {this.state.weather && <WeatherToday temper={this.state.weather} lang={this.state.lang} />}\n            {this.state.forecast && <ThreeDayWthr threeDayWeather={this.state.forecast} lang={this.state.lang} />}\n\n          </div>\n\n          {this.state.city && <Geolocation city={this.state.city} lang={this.state.lang} />}\n\n\n\n\n        </div >\n      </LoadingScreen >\n    )\n  }\n\n  async getRequest(city) {\n\n    const newState = {};\n    newState.weather = await this.launchRequest(\"weather\", city, null);\n    if (newState.weather) {\n      newState.forecast = await this.launchRequest(\"forecast\", city, null);\n      newState.city = await this.launchRequest(\"coord\", city, null);\n      newState.cityName = city;\n      newState.picture = await this.launchRequest(\"picture\", city, null);\n      newState.loading = false;\n      this.setState(newState);\n    }\n  }\n\n  async launchRequest(typeOfRequest, city, coord) {\n    const link = this.getLink(typeOfRequest, city, coord);\n    const request = await fetch(link);\n\n    if (request.status === 403) { return false }\n\n    const parsedRequest = await request.json();\n\n    if (parsedRequest.message === \"city not found\" || parsedRequest.total_results === 0) { return false, alert('введите другой город') }\n    else { return parsedRequest; }\n\n  }\n\n\n\n\n\n\n\n\n\n\n\n  getLink(typeOfRequest, city, coord) {\n    let link;\n    switch (typeOfRequest) {\n      case \"weather\":\n        link = `https://api.openweathermap.org/data/2.5/weather?q=${city}&lang=${this.state.lang}&units=${this.state.unitsType}&appid=28c72f6418a6f4fdf083d18908206742`;\n        break;\n      case \"forecast\":\n        link = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&lang=${this.state.lang}&units=${this.state.unitsType}&APPID=28c72f6418a6f4fdf083d18908206742`;\n        break;\n      case \"coord\":\n        link = `https://api.opencagedata.com/geocode/v1/json?q=${city}&key=6eefb8f093e64e4b865c3281df69b384`;\n        break;\n      case \"city\":\n        link = `https://api.opencagedata.com/geocode/v1/json?q=${coord.latitude}+${coord.longitude}&language=de&key=6eefb8f093e64e4b865c3281df69b384`;\n        break;\n      case \"picture\":\n        link = `https://api.unsplash.com/photos/random?orientation=landscape&per_page=1&query=nature&client_id=175FYCnNB3FK0X4DTIHQ3Yf05v5ewj0pg_I5UKSm5x4`;\n        break;\n      default:\n        break;\n    }\n    return link;\n  }\n  componentDidMount() {\n    const background = document.getElementById(\"wrapper\");\n\n    this.launchRequest(\"picture\").then((result) => {\n\n      this.setState({ picture: result }, () => {\n\n        background.style.cssText = `background-image: url(${this.state.picture ? this.state.picture.urls.regular : DEFAULT_PICTURE_URL});`;\n      })\n    })\n  }\n\n  componentWillMount() {\n\n    window.navigator.geolocation.getCurrentPosition((myPosition) => {\n\n      this.launchRequest(\"city\", null, myPosition.coords)\n        .then((result) => this.getRequest(result.results[0].components.city));\n    }, () => this.setState({ loading: false }))\n\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n\n\n\n\n"],"sourceRoot":""}